import numpy as np

def discounted_cash_flow(fcf, growth_rate, discount_rate, terminal_growth, years=5):
    """
    Jednoduch√Ω DCF model.
    - fcf: posledn√≠ zn√°m√Ω free cash flow
    - growth_rate: oƒçek√°van√Ω r≈Øst FCF na dal≈°√≠ch p√°r let
    - discount_rate: po≈æadovan√° n√°vratnost (WACC)
    - terminal_growth: dlouhodob√Ω r≈Øst po roce 'years'
    """
    cash_flows = []
    for year in range(1, years + 1):
        fcf = fcf * (1 + growth_rate)
        discounted = fcf / ((1 + discount_rate) ** year)
        cash_flows.append(discounted)

    # Termin√°ln√≠ hodnota (Gordon Growth Model)
    terminal_value = (fcf * (1 + terminal_growth)) / (discount_rate - terminal_growth)
    discounted_terminal = terminal_value / ((1 + discount_rate) ** years)

    return sum(cash_flows) + discounted_terminal


def dividend_discount(dividend, growth_rate, discount_rate):
    """
    Gordon Dividend Discount Model (DDM) ‚Äì jen pro firmy vypl√°cej√≠c√≠ dividendu.
    """
    if discount_rate <= growth_rate:
        return None
    return dividend * (1 + growth_rate) / (discount_rate - growth_rate)


def evaluate_intrinsic_value(info, financials, history, cashflow_statement=None):
    """
    Vyhodnocen√≠ intrinsic value na z√°kladƒõ DCF a DDM.
    - Pou≈æ√≠v√° FCF z cashflow_statement, pokud je dostupn√©.
    - Vrac√≠ slovn√≠k s v√Ωsledky a koment√°≈ôi pro UI.
    """
    price = history['Close'].iloc[-1]
    comments = []

    # ‚úÖ Pokus√≠me se z√≠skat Free Cash Flow z cashflow_statement
    fcf = None
    if cashflow_statement is not None:
        if "Free Cash Flow" in cashflow_statement.index:
            fcf = cashflow_statement.loc["Free Cash Flow"].iloc[0]
            comments.append(f"‚úÖ Free Cash Flow nalezen v cashflow_statement: {fcf:,.0f} USD")
        elif "FreeCashFlow" in cashflow_statement.index:  # jin√Ω mo≈æn√Ω n√°zev
            fcf = cashflow_statement.loc["FreeCashFlow"].iloc[0]
            comments.append(f"‚úÖ FreeCashFlow nalezen v cashflow_statement: {fcf:,.0f} USD")
        else:
            comments.append("‚ö†Ô∏è Free Cash Flow nen√≠ v cashflow_statement uveden.")
    else:
        comments.append("‚ö†Ô∏è Cashflow_statement nebyl p≈ôed√°n funkci.")

    # ‚úÖ Pokud nenajdeme FCF v cashflow_statement, fallback do financials (pro jistotu)
    if fcf is None and financials is not None:
        try:
            fcf = financials.loc["Free Cash Flow"].iloc[0]
            comments.append(f"‚úÖ Free Cash Flow nalezen ve financials: {fcf:,.0f} USD")
        except:
            comments.append("‚ùå Free Cash Flow nelze naj√≠t ani ve financials.")

    dividend = info.get("dividendRate", None)

    # üìä Parametry modelu (jednoduch√Ω setup ‚Äì m≈Ø≈æe≈° pozdƒõji doladit)
    discount_rate = 0.09  # 9% WACC
    growth_rate = 0.03    # 3% roƒçn√≠ r≈Øst
    terminal_growth = 0.02

    intrinsic_values = {}

    # ======================
    # ‚úÖ DCF MODEL
    # ======================
    if fcf and fcf > 0:
        dcf_value = discounted_cash_flow(fcf, growth_rate, discount_rate, terminal_growth)
        shares_outstanding = info.get("sharesOutstanding", None)

        if shares_outstanding:
            intrinsic_per_share = dcf_value / shares_outstanding
            intrinsic_values["DCF"] = intrinsic_per_share
            comments.append(f"üìä DCF model: **${intrinsic_per_share:,.2f}** na akcii.")
        else:
            comments.append("‚ùå Nelze spoƒç√≠tat DCF ‚Äì chyb√≠ poƒçet akci√≠ (sharesOutstanding).")
    else:
        comments.append("‚ùå Nelze spoƒç√≠tat DCF ‚Äì FCF nen√≠ dostupn√© nebo je ‚â§ 0.")

    # ======================
    # ‚úÖ DDM MODEL
    # ======================
    if dividend and dividend > 0:
        ddm_value = dividend_discount(dividend, growth_rate, discount_rate)
        if ddm_value:
            intrinsic_values["DDM"] = ddm_value
            comments.append(f"üìä DDM model: **${ddm_value:,.2f}** na akcii.")
        else:
            comments.append("‚ùå Nelze spoƒç√≠tat DDM ‚Äì diskontn√≠ sazba ‚â§ r≈Øst.")
    else:
        comments.append("‚ÑπÔ∏è DDM model nebyl pou≈æit (firma nevypl√°c√≠ dividendu).")

    # ======================
    # ‚úÖ Z√ÅVƒöREƒåN√â HODNOCEN√ç
    # ======================
    if intrinsic_values:
        avg_value = np.mean(list(intrinsic_values.values()))
        diff = (avg_value - price) / price

        if diff > 0.15:
            status = f"‚úÖ Akcie je PODHODNOCEN√Å o {diff:.1%}."
        elif diff < -0.15:
            status = f"‚ùå Akcie je NADHODNOCEN√Å o {abs(diff):.1%}."
        else:
            status = f"‚öñÔ∏è Akcie je zhruba F√âROVƒö ocenƒõn√°."
    else:
        avg_value = None
        status = "‚ÑπÔ∏è Nelze vypoƒç√≠tat intrinsic value."

    return {
        "Intrinsic Value Models": intrinsic_values,
        "Average Intrinsic Value": avg_value,
        "Current Price": price,
        "Status": status,
        "Koment√°≈ôe": comments
    }
